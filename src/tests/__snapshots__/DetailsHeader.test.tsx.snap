// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsHeader empty Snapshot for default 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": undefined,
        "height": 85,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 24,
            "paddingTop": 40,
            "width": "100%",
          },
          Object {
            "backgroundColor": undefined,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 15,
              "left": 15,
              "right": 15,
              "top": 15,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
              "opacity": 0,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 16,
                "lineHeight": 20,
                "paddingHorizontal": 12,
              }
            }
          />
        </View>
        <View
          accessible={true}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 15,
              "left": 15,
              "right": 15,
              "top": 15,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
      </View>
    </View>
  </View>
  <RCTScrollView
    bounces={true}
    bouncesZoom={true}
    contentContainerStyle={
      Object {
        "backgroundColor": undefined,
        "minHeight": 1956.02,
      }
    }
    decelerationRate="fast"
    forwardedRef={[Function]}
    nestedScrollEnabled={true}
    onScroll={[Function]}
    onScrollEndDrag={[Function]}
    overScrollMode="never"
    scrollEventThrottle={1}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "height": 707.02,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 300,
                "left": 0,
                "overflow": "scroll",
                "position": "absolute",
                "right": 0,
                "top": -300,
              },
              Object {
                "backgroundColor": undefined,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "justifyContent": "flex-end",
                "left": 0,
                "marginBottom": 5,
                "paddingBottom": 3,
                "position": "absolute",
                "top": 0,
                "width": 750.5,
              },
              Object {
                "height": 707.02,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": undefined,
                "borderBottomRightRadius": 80,
                "height": "100%",
                "justifyContent": "flex-end",
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": undefined,
              "height": 707.02,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
                "paddingHorizontal": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "rgba(255, 255, 255, 0.1)",
                  "borderRadius": 18,
                  "height": 36,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "paddingHorizontal": 12,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "opacity": 1,
                  "paddingBottom": 24,
                  "paddingTop": 24,
                }
              }
            >
              <Text
                numberOfLines={3}
                style={
                  Object {
                    "color": "white",
                    "fontSize": 75,
                    "letterSpacing": -1,
                    "lineHeight": 90,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "opacity": 1,
                  "paddingBottom": 32,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "white",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "padding": 8,
                    "width": 56,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "black",
                      "fontSize": 16,
                      "lineHeight": 20,
                      "paddingLeft": 4,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginHorizontal": 24,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 16,
                      "lineHeight": 20,
                      "paddingLeft": 12,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RCTScrollView
          alwaysBounceVertical={false}
          automaticallyAdjustContentInsets={false}
          contentContainerStyle={
            Object {
              "minHeight": 541.98,
            }
          }
          contentOffset={
            Object {
              "x": 0,
            }
          }
          directionalLockEnabled={true}
          forwardedRef={[Function]}
          horizontal={true}
          keyboardDismissMode="on-drag"
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          pagingEnabled={true}
          scrollEnabled={true}
          scrollEventThrottle={16}
          scrollsToTop={false}
          showsHorizontalScrollIndicator={false}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
