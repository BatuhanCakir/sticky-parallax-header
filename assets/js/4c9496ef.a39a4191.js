"use strict";(self.webpackChunkreact_native_sticky_parallax_header_docs=self.webpackChunkreact_native_sticky_parallax_header_docs||[]).push([[5281],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||s;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},953:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var n=r(3117),a=r(102),s=(r(7294),r(3905)),o=["components"],l={sidebar_position:3},i="Custom FlashList Header",c={unversionedId:"examples/custom-flashlist-header",id:"examples/custom-flashlist-header",title:"Custom FlashList Header",description:"Analogically to custom headers, react-native-sticky-parallax-header provides tools to enhance FlashList with custom sticky header layout:",source:"@site/docs/examples/custom-flashlist-header.md",sourceDirName:"examples",slug:"/examples/custom-flashlist-header",permalink:"/sticky-parallax-header/docs/next/examples/custom-flashlist-header",draft:!1,editUrl:"https://github.com/netguru/sticky-parallax-header/tree/master/docs/docs/examples/custom-flashlist-header.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Custom Header",permalink:"/sticky-parallax-header/docs/next/examples/custom-header"},next:{title:"Scroll component reference",permalink:"/sticky-parallax-header/docs/next/guides/scrollview-reference"}},p={},u=[],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"custom-flashlist-header"},"Custom FlashList Header"),(0,s.kt)("p",null,"Analogically to ",(0,s.kt)("a",{parentName:"p",href:"/sticky-parallax-header/docs/next/examples/custom-header"},"custom headers"),", react-native-sticky-parallax-header provides tools to enhance ",(0,s.kt)("a",{parentName:"p",href:"https://shopify.github.io/flash-list/docs/"},"FlashList")," with custom sticky header layout:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"useStickyHeaderFlashListScrollProps")," equivalent for ",(0,s.kt)("a",{parentName:"li",href:"/sticky-parallax-header/docs/next/examples/custom-header#scroll-props"},(0,s.kt)("inlineCode",{parentName:"a"},"useStickyHeaderScrollProps"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"withStickyHeaderFlashList")," equivalent for ",(0,s.kt)("inlineCode",{parentName:"li"},"withStickyHeader"))),(0,s.kt)("p",null,"Full source code can be found in ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/netguru/sticky-parallax-header/blob/master/example/src/screens/additionalExamples/StickyHeaderFlashListExample.tsx"},"example repo")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},'const PARALLAX_HEIGHT = 330;\nconst SNAP_START_THRESHOLD = 50;\nconst SNAP_STOP_THRESHOLD = 330;\n\nconst StickyHeaderFlashList = withStickyHeaderFlashList(FlashList) as (\n  props: StickyHeaderFlashListProps<string> & React.RefAttributes<FlashList<string>>\n) => React.ReactElement;\n\nconst StickyHeaderFlashListExample: React.FC = () => {\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const { onMomentumScrollEnd, onScroll, onScrollEndDrag, scrollHeight, scrollViewRef } =\n    useStickyHeaderFlashListScrollProps({\n      parallaxHeight: PARALLAX_HEIGHT,\n      snapStartThreshold: SNAP_START_THRESHOLD,\n      snapStopThreshold: SNAP_STOP_THRESHOLD,\n      snapToEdge: true,\n    });\n\n  async function onRefresh() {\n    setRefreshing(true);\n    await new Promise((res) => setTimeout(res, 2000));\n    setRefreshing(false);\n  }\n\n  return (\n    <SafeAreaView style={screenStyles.screenContainer}>\n      <StickyHeaderFlashList\n        ref={scrollViewRef}\n        containerStyle={screenStyles.stretchContainer}\n        data={data}\n        decelerationRate="fast"\n        keyExtractor={(_, index) => `${index}`}\n        /**\n         * Refresh control is not implemented on web, which causes styles as margin or padding\n         * to be duplicated - ignore it on web, it will be no-op anyway\n         */\n        {...Platform.select({ native: { onRefresh } })}\n        refreshing={refreshing}\n        onScroll={onScroll}\n        onMomentumScrollEnd={onMomentumScrollEnd}\n        onScrollEndDrag={onScrollEndDrag}\n        renderHeader={() => {\n          return (\n            <View pointerEvents="box-none" style={[styles.center, { height: scrollHeight }]}>\n              <Header />\n            </View>\n          );\n        }}\n        renderItem={({ item }) => {\n          return <Paragraph text={item} />;\n        }}\n        renderTabs={() => <Tabs />}\n        scrollEventThrottle={16}\n        estimatedItemSize={400}\n        showsVerticalScrollIndicator={false}\n      />\n      <StatusBar backgroundColor="transparent" barStyle="dark-content" />\n    </SafeAreaView>\n  );\n};\n')))}m.isMDXComponent=!0}}]);