"use strict";(self.webpackChunkreact_native_sticky_parallax_header_docs=self.webpackChunkreact_native_sticky_parallax_header_docs||[]).push([[5119],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),d=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||s[m]||a;return n?i.createElement(k,o(o({ref:t},c),{},{components:n})):i.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2298:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var i=n(3117),r=n(102),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:4},p="Migration from 0.4.x to 1.x.x",d={unversionedId:"introduction/migration-guide",id:"introduction/migration-guide",title:"Migration from 0.4.x to 1.x.x",description:"How to upgrade?",source:"@site/docs/introduction/migration-guide.md",sourceDirName:"introduction",slug:"/introduction/migration-guide",permalink:"/sticky-parallax-header/docs/next/introduction/migration-guide",draft:!1,editUrl:"https://github.com/netguru/sticky-parallax-header/tree/master/docs/docs/introduction/migration-guide.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/sticky-parallax-header/docs/next/introduction/installation"},next:{title:"Web support",permalink:"/sticky-parallax-header/docs/next/introduction/web-support"}},c={},s=[{value:"How to upgrade?",id:"how-to-upgrade",level:2},{value:"Differences between old and new api",id:"differences-between-old-and-new-api",level:2},{value:"New apis that were not present in version &lt;= 0.4.x",id:"new-apis-that-were-not-present-in-version--04x",level:2}],u={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"migration-from-04x-to-1xx"},"Migration from 0.4.x to 1.x.x"),(0,a.kt)("h2",{id:"how-to-upgrade"},"How to upgrade?"),(0,a.kt)("p",null,"To upgrade from version <= 0.4.x to 1.x.x first follow ",(0,a.kt)("a",{parentName:"p",href:"/sticky-parallax-header/docs/next/introduction/installation"},"installation guide")),(0,a.kt)("p",null,"After installing all packages replace old components with 1.x.x api"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"StickyParallaxHeader")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"AvatarHeader")," type -> ",(0,a.kt)("inlineCode",{parentName:"li"},"AvatarHeaderScrollView")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"StickyParallaxHeader")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"DetailsHeader")," type -> ",(0,a.kt)("inlineCode",{parentName:"li"},"DetailsHeaderScrollView")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"StickyParallaxHeader")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"TabbedHeader")," type -> ",(0,a.kt)("inlineCode",{parentName:"li"},"TabbedHeaderPager")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"StickyParallaxHeader")," without specified type -> ",(0,a.kt)("inlineCode",{parentName:"li"},"StickyHeaderScrollView"))),(0,a.kt)("h2",{id:"differences-between-old-and-new-api"},"Differences between old and new api"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"new api exports separate components for each of header types, instead of single component with ",(0,a.kt)("inlineCode",{parentName:"li"},"headerType")," prop"),(0,a.kt)("li",{parentName:"ul"},"new api supports ",(0,a.kt)("inlineCode",{parentName:"li"},"FlatList"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SectionLis"),"t` & custom scroll components"),(0,a.kt)("li",{parentName:"ul"},"new api inherits all props of its scroll component (",(0,a.kt)("inlineCode",{parentName:"li"},"ScrollViewProps"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"FlatListProps")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"SectionListProps"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contentContainerStyles")," is removed and can be replaced in ",(0,a.kt)("inlineCode",{parentName:"li"},"TabbedHeaderPager")," by passing ",(0,a.kt)("inlineCode",{parentName:"li"},"contentContainerStyle")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"pagerProps")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"horizontalScrollBounces")," is removed and can be replaced in ",(0,a.kt)("inlineCode",{parentName:"li"},"TabbedHeaderPager")," by passing ",(0,a.kt)("inlineCode",{parentName:"li"},"bounces")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"pagerProps")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"header")," prop in predefined components is replaced with ",(0,a.kt)("inlineCode",{parentName:"li"},"renderHeaderBar")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"headerSize")," is replaced with ",(0,a.kt)("inlineCode",{parentName:"li"},"onHeaderLayout")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onRef")," prop is removed"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"scrollEvent")," is replaced with worklet function ",(0,a.kt)("inlineCode",{parentName:"li"},"onScroll")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onMomentumScrollBegin"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"onMomentumScrollEnd"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"onScrollBeginDrag")," & ",(0,a.kt)("inlineCode",{parentName:"li"},"onScrollEndDrag")," are worklet functions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"scrollRef")," is removed, use ",(0,a.kt)("inlineCode",{parentName:"li"},"ref")," instead"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"snapValue")," prop is removed")),(0,a.kt)("h2",{id:"new-apis-that-were-not-present-in-version--04x"},"New apis that were not present in version <= 0.4.x"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"(Avatar|Details|Sticky)HeaderFlatList")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"FlatList")," version of ",(0,a.kt)("inlineCode",{parentName:"li"},"(Avatar|Details|Sticky)ScrollView")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"(Avatar|Details|Sticky)HeaderSectionList")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"SectionList")," version of ",(0,a.kt)("inlineCode",{parentName:"li"},"(Avatar|Details|Sticky)ScrollView")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TabbedHeaderList")," - tabbed header with ",(0,a.kt)("inlineCode",{parentName:"li"},"SectionList"),' that can be used to create "Uber Eats"-like header layout'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"useStickyHeaderScrollProps"),' - hook that sets up props responsible for "snap effect", can be used together with ',(0,a.kt)("inlineCode",{parentName:"li"},"StickyHeader(ScrollView|FlatList|SectionList)")," to create custom sticky header layout"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"withStickyHeader")," - HOC that creates custom sticky header component from custom scroll component")))}m.isMDXComponent=!0}}]);