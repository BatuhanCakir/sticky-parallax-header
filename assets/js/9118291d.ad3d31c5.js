"use strict";(self.webpackChunkreact_native_sticky_parallax_header_docs=self.webpackChunkreact_native_sticky_parallax_header_docs||[]).push([[2194],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),y=a,f=p["".concat(c,".").concat(y)]||p[y]||u[y]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2348:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:5},c="React Navigation header and sticky header layout",l={unversionedId:"guides/react-navigation-header",id:"guides/react-navigation-header",title:"React Navigation header and sticky header layout",description:"If react-navigation header inside the screen is used, sticky header component should have enableSafeAreaTopInset prop set to false, to prevent duplicated margin between react-navigation header and sticky header layout.",source:"@site/docs/guides/react-navigation-header.md",sourceDirName:"guides",slug:"/guides/react-navigation-header",permalink:"/sticky-parallax-header/docs/next/guides/react-navigation-header",draft:!1,editUrl:"https://github.com/netguru/sticky-parallax-header/tree/master/docs/docs/guides/react-navigation-header.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Rendering custom (styled) icons",permalink:"/sticky-parallax-header/docs/next/guides/custom-icons"},next:{title:"Animated color props",permalink:"/sticky-parallax-header/docs/next/guides/animated-color-props"}},d={},u=[],p={toc:u};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"react-navigation-header-and-sticky-header-layout"},"React Navigation header and sticky header layout"),(0,o.kt)("p",null,"If react-navigation header inside the screen is used, sticky header component should have ",(0,o.kt)("inlineCode",{parentName:"p"},"enableSafeAreaTopInset")," prop set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", to prevent duplicated margin between react-navigation header and sticky header layout."),(0,o.kt)("p",null,"Full example code can be found in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/netguru/sticky-parallax-header/blob/master/example/src/screens/additionalExamples/TabbedHeaderWithSectionLists.tsx"},"example repo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const TabbedHeaderWithSectionListsExample: React.FC = () => {\n  const isDarkTheme = useColorScheme() === \'dark\';\n\n  return (\n    <>\n      <TabbedHeaderPager\n        contentContainerStyle={[\n          isDarkTheme ? screenStyles.darkBackground : screenStyles.lightBackground,\n        ]}\n        backgroundColor={colors.primaryGreen}\n        containerStyle={screenStyles.stretchContainer}\n        foregroundImage={photosPortraitMe}\n        disableScrollToPosition={true}\n        enableSafeAreaTopInset={false} // <-------------- disable safe are top inset in sticky header\n        rememberTabScrollPosition={false}\n        logo={logo}\n        title={"Mornin\' Mark! \\nReady for a quiz?"}\n        titleStyle={screenStyles.text}\n        titleTestID={tabbedHeaderTestIDs.title}\n        stickyTabs={false}\n        tabs={QUIZ_TAB_SECTIONS.map((section) => ({\n          title: section.title,\n          testID: section.testID,\n        }))}\n        tabTextStyle={screenStyles.text}\n        showsVerticalScrollIndicator={false}>\n        <View style={styles.content}>\n          <List startIndex={0} />\n        </View>\n        <View style={styles.content}>\n          <List startIndex={1} />\n        </View>\n        <View style={styles.content}>\n          <List startIndex={2} />\n        </View>\n      </TabbedHeaderPager>\n      <StatusBar barStyle="light-content" backgroundColor={colors.primaryGreen} translucent />\n    </>\n  );\n};\n\n')))}y.isMDXComponent=!0}}]);