"use strict";(self.webpackChunkreact_native_sticky_parallax_header_docs=self.webpackChunkreact_native_sticky_parallax_header_docs||[]).push([[706],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1835:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),i=["components"],s={sidebar_position:2},l="Pull to refresh",c={unversionedId:"guides/pull-to-refresh",id:"guides/pull-to-refresh",title:"Pull to refresh",description:"All exported components inherits props of their underlying scroll component, to use default refresh control, just pass onRefresh & refreshing props. If you want to have custom setup (e.g. custom style), pass component as refreshControl prop",source:"@site/docs/guides/pull-to-refresh.md",sourceDirName:"guides",slug:"/guides/pull-to-refresh",permalink:"/sticky-parallax-header/docs/next/guides/pull-to-refresh",draft:!1,editUrl:"https://github.com/netguru/sticky-parallax-header/tree/master/docs/docs/guides/pull-to-refresh.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Scroll component reference",permalink:"/sticky-parallax-header/docs/next/guides/scrollview-reference"},next:{title:"Rendering icons in tabs",permalink:"/sticky-parallax-header/docs/next/guides/icons-in-tabs"}},p={},u=[],d={toc:u};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pull-to-refresh"},"Pull to refresh"),(0,a.kt)("p",null,"All exported components inherits props of their underlying scroll component, to use default refresh control, just pass ",(0,a.kt)("inlineCode",{parentName:"p"},"onRefresh")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshing")," props. If you want to have custom setup (e.g. custom style), pass component as ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshControl")," prop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"  <StickyHeaderScrollView\n    // ...\n    onRefresh={onRefresh}\n    refreshing={refreshing}\n    // ...\n  >\n    {/** content */}\n  </StickyHeaderScrollView>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'  <StickyHeaderScrollView\n    // ...\n    refreshControl={\n      <RefreshControl\n        // z Index is required on IOS, to refresh indicator be visible\n        style={{ zIndex: 1 }}\n        refreshing={refreshing}\n        titleColor="white"\n        tintColor="white"\n        title="Refreshing"\n        onRefresh={onRefresh}\n      />\n    }\n    // ...\n  >\n    {/** content */}\n  </StickyHeaderScrollView>\n')),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"using ",(0,a.kt)("inlineCode",{parentName:"p"},"RefreshControl")," on web, can break sticky header layout, because web implementation is just stubbed and doubles ScrollView's margin/padding"),(0,a.kt)("p",{parentName:"div"},"to handle that, use it only when platform is not web"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"{...Platform.select({ default: { onRefresh, refreshing }, web: undefined })}\n")),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'refreshControl={\n  Platform.select({\n    default: (\n      <RefreshControl\n        // z Index is required on IOS, to refresh indicator be visible\n        style={{ zIndex: 1 }}\n        refreshing={refreshing}\n        titleColor="white"\n        tintColor="white"\n        title="Refreshing"\n        onRefresh={onRefresh}\n      />\n    ),\n    web: undefined,\n  })\n}\n')))))}f.isMDXComponent=!0}}]);