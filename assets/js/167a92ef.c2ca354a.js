"use strict";(self.webpackChunkreact_native_sticky_parallax_header_docs=self.webpackChunkreact_native_sticky_parallax_header_docs||[]).push([[4629],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=o,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2638:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),l=["components"],c={sidebar_position:2},s="Custom Header",i={unversionedId:"examples/custom-header",id:"examples/custom-header",title:"Custom Header",description:"To create custom header layout, you'll have to use StickyHeader(ScrollView|FlatList|SectionList) & useStickyHeaderScrollProps. If you want to use custom scroll component, instead of StickyHeader(ScrollView|FlatList|SectionList), you can wrap your custom scroll component in withStickyHeader HOC.",source:"@site/docs/examples/custom-header.md",sourceDirName:"examples",slug:"/examples/custom-header",permalink:"/sticky-parallax-header/docs/next/examples/custom-header",draft:!1,editUrl:"https://github.com/netguru/sticky-parallax-header/tree/master/docs/docs/examples/custom-header.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Custom Tabbed Header",permalink:"/sticky-parallax-header/docs/next/examples/custom-tabbed-header"},next:{title:"Custom FlashList Header",permalink:"/sticky-parallax-header/docs/next/examples/custom-flashlist-header"}},u={},p=[],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-header"},"Custom Header"),(0,a.kt)("p",null,"To create custom header layout, you'll have to use ",(0,a.kt)("inlineCode",{parentName:"p"},"StickyHeader(ScrollView|FlatList|SectionList)")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"useStickyHeaderScrollProps"),". If you want to use custom scroll component, instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"StickyHeader(ScrollView|FlatList|SectionList)"),", you can wrap your custom scroll component in ",(0,a.kt)("inlineCode",{parentName:"p"},"withStickyHeader")," HOC."),(0,a.kt)("p",null,"For scroll props use ",(0,a.kt)("inlineCode",{parentName:"p"},"useStickyHeaderScrollProps"),' hook, which is responsible for creating "snap effect" behavior.'),(0,a.kt)("p",null,"Props returned from ",(0,a.kt)("inlineCode",{parentName:"p"},"useStickyHeaderScrollProps")," should be passed to sticky header component (",(0,a.kt)("inlineCode",{parentName:"p"},"StickyHeader(ScrollView|FlatList|SectionList)")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"withStickyHeader")," decorated scroll component)."),(0,a.kt)("p",null,"To display custom header or tabs layout, use ",(0,a.kt)("inlineCode",{parentName:"p"},"renderHeader")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"renderTabs")," props."),(0,a.kt)("p",null,"Full source code can be found in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/netguru/sticky-parallax-header/blob/master/example/src/screens/SimsScreen/index.tsx"},"example repo")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const PARALLAX_HEIGHT = 330;\nconst HEADER_BAR_HEIGHT = 92;\nconst SNAP_START_THRESHOLD = 50;\nconst SNAP_STOP_THRESHOLD = 330;\n\nconst SimsScreen: React.FC = () => {\n  const { width: windowWidth } = useWindowDimensions();\n  const {\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n    // useStickyHeaderScrollProps is generic and need to know\n    // which component (ScrollView, FlatList<ItemT> or SectionList<ItemT, SectionT>)\n    // will be enhanced with sticky scroll props\n  } = useStickyHeaderScrollProps<ScrollView>({\n    parallaxHeight: PARALLAX_HEIGHT,\n    snapStartThreshold: SNAP_START_THRESHOLD,\n    snapStopThreshold: SNAP_STOP_THRESHOLD,\n    snapToEdge: true,\n  });\n\n  return (\n    <View style={screenStyles.screenContainer}>\n      <View style={[styles.headerBarContainer, { width: windowWidth }]}>\n        <HeaderBar scrollValue={scrollValue} />\n      </View>\n      <View style={screenStyles.stretchContainer}>\n        <StickyHeaderScrollView\n          ref={scrollViewRef}\n          containerStyle={screenStyles.stretchContainer}\n          onScroll={onScroll}\n          onMomentumScrollEnd={onMomentumScrollEnd}\n          onScrollEndDrag={onScrollEndDrag}\n          renderHeader={() => {\n            return (\n              <View pointerEvents=\"box-none\" style={{ height: scrollHeight }}>\n                <Foreground scrollValue={scrollValue} />\n              </View>\n            );\n          }}\n          renderTabs={() => (\n            <View style={styles.tabContainer}>\n              <Tabs />\n            </View>\n          )}\n          showsVerticalScrollIndicator={false}\n          style={screenStyles.stretch}>\n          <SafeAreaView edges={['left', 'right', 'bottom']} style={styles.content}>\n            <Text style={screenStyles.text}>\n              {text}\n            </Text>\n          </SafeAreaView>\n        </StickyHeaderScrollView>\n      </View>\n      <StatusBar barStyle=\"light-content\" backgroundColor={colors.black} translucent />\n    </View>\n  );\n};\n")))}m.isMDXComponent=!0}}]);